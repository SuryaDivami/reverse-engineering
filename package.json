{
  "name": "@your-org/nestjs-reverse-engineering",
  "version": "1.0.0",
  "description": "A powerful TypeScript/NestJS library for database reverse engineering, entity generation, and CRUD operations",
  "author": "Your Name <your.email@example.com>",
  "private": false,
  "license": "MIT",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "bin": {
    "nestjs-reverse-engineering": "dist/cli/reverse-engineer-new.js"
  },
  "files": [
    "dist",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "package.json"
  ],
  "keywords": [
    "nestjs",
    "typescript",
    "reverse-engineering",
    "crud",
    "code-generation",
    "typeorm",
    "database",
    "postgres",
    "mysql",
    "entity-generation"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/nestjs-reverse-engineering.git"
  },
  "homepage": "https://github.com/your-org/nestjs-reverse-engineering#readme",
  "bugs": {
    "url": "https://github.com/your-org/nestjs-reverse-engineering/issues"
  },
  "scripts": {
    "build": "tsc -p tsconfig.lib.json && npm run build:cli",
    "build:watch": "tsc -p tsconfig.lib.json --watch",
    "build:cli": "mkdir -p dist/cli && npx tsc cli/reverse-engineer-new.ts --outDir dist --target es2020 --module commonjs --moduleResolution node --esModuleInterop --allowSyntheticDefaultImports --experimentalDecorators --emitDecoratorMetadata --skipLibCheck && sed -i '' '1d' dist/cli/reverse-engineer-new.js && echo '#!/usr/bin/env node' | cat - dist/cli/reverse-engineer-new.js > temp && mv temp dist/cli/reverse-engineer-new.js && chmod +x dist/cli/reverse-engineer-new.js",
    "prepublishOnly": "npm run build",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "cli": "npx ts-node cli/reverse-engineer-new.ts",
    "cli:init": "npx ts-node cli/reverse-engineer-new.ts init",
    "cli:test": "npx ts-node cli/reverse-engineer-new.ts test",
    "cli:tables": "npx ts-node cli/reverse-engineer-new.ts tables",
    "cli:entities": "npx ts-node cli/reverse-engineer-new.ts entities",
    "cli:crud": "npx ts-node cli/reverse-engineer-new.ts crud",
    "cli:all": "npx ts-node cli/reverse-engineer-new.ts all",
    "reverse-engineer": "ts-node cli/reverse-engineer.ts",
    "re:help": "ts-node cli/reverse-engineer.ts --help",
    "re:test": "ts-node cli/reverse-engineer.ts --test-connection",
    "re:tables": "ts-node cli/reverse-engineer.ts --list-tables",
    "re:analyze": "ts-node cli/reverse-engineer.ts --analyze-schema",
    "re:generate": "ts-node cli/reverse-engineer.ts",
    "re:index": "ts-node cli/reverse-engineer.ts --generate-index",
    "re:sql": "ts-node cli/reverse-engineer.ts --generate-sql",
    "re:sql:postgres": "ts-node cli/reverse-engineer.ts --generate-sql --sql-dialect postgres",
    "re:sql:mysql": "ts-node cli/reverse-engineer.ts --generate-sql --sql-dialect mysql",
    "re:data": "ts-node cli/reverse-engineer.ts --export-data",
    "re:data:masked": "ts-node cli/reverse-engineer.ts --export-data --data-masking",
    "re:data:batch": "ts-node cli/reverse-engineer.ts --export-data --data-batch-size 500",
    "re:crud": "ts-node cli/reverse-engineer.ts --generate-crud",
    "re:crud:nestjs": "ts-node cli/reverse-engineer.ts --generate-crud --crud-framework nestjs",
    "re:crud:express": "ts-node cli/reverse-engineer.ts --generate-crud --crud-framework express",
    "re:crud:fastify": "ts-node cli/reverse-engineer.ts --generate-crud --crud-framework fastify",
    "re:crud:auth": "ts-node cli/reverse-engineer.ts --generate-crud --crud-auth --crud-tests",
    "examples": "ts-node examples/run-examples.ts"
  },
  "dependencies": {
    "@nestjs/common": "^10.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "^11.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "commander": "^12.1.0",
    "glob": "^11.0.3",
    "pg": "^8.16.3",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.25"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/express": "^4.17.17",
    "@types/glob": "^8.1.0",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^9.0.0",
    "jest": "^29.5.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
